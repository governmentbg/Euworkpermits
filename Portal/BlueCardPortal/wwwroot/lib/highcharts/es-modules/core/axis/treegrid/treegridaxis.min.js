"use strict";import BrokenAxis from"../BrokenAxis.js";import GridAxis from"../GridAxis.js";import Tree from"../../../Gantt/Tree.js";import TreeGridTick from"./TreeGridTick.js";import TU from"../../../Series/TreeUtilities.js";const getLevelOptions=TU["getLevelOptions"];import U from"../../Utilities.js";const{addEvent,find,fireEvent,isArray,isObject,isString,merge,pick,removeEvent,wrap}=U;let TickConstructor;function getBreakFromNode(e,t){var r=e.collapseEnd||0;let o=e.collapseStart||0;return t<=r&&(o-=.5),{from:o,to:r,showPoints:!1}}function getTreeGridFromData(e,t,r){const a=[],i=[],d={},c="boolean"==typeof t&&t;let l={},p=-1;var f,t=Tree.getTree(e,{after:function(e){const t=l[e.pos];let r=0,o=0;t.children.forEach(function(e){o+=(e.descendants||0)+1,r=Math.max((e.height||0)+1,r)}),t.descendants=o,t.height=r,t.collapsed&&i.push(t)},before:function(e){const t=isObject(e.data,!0)?e.data:{},r=isString(t.name)?t.name:"",o=d[e.parent],i=isObject(o,!0)?l[o.pos]:null;let s,n;c&&isObject(i,!0)&&(s=find(i.children,function(e){return e.name===r}))?(n=s.pos,s.nodes.push(e)):n=p++,l[n]||(l[n]=s={depth:i?i.depth+1:0,name:r,id:t.id,nodes:[e],children:[],pos:n},-1!==n&&a.push(r),isObject(i,!0)&&i.children.push(s)),isString(e.id)&&(d[e.id]=e),s&&!0===t.collapsed&&(s.collapsed=!0),e.pos=n}});function u(e,r,t){const o=e.nodes;let i=r+(-1===r?0:f-1);const s=(i-r)/2,n=r+s;return o.forEach(function(e){const t=e.data;isObject(t,!0)&&(t.y=r+(t.seriesIndex||0),delete t.seriesIndex),e.pos=n}),(t[n]=e).pos=n,e.tickmarkOffset=.5+s,e.collapseStart=i+.5,e.children.forEach(function(e){u(e,i+1,t),i=(e.collapseEnd||0)-.5}),e.collapseEnd=i+.5,t}return l=(e=l,f=r,u(e[-1],-1,{})),{categories:a,mapOfIdToNode:d,mapOfPosToGridNode:l,collapsedNodes:i,tree:t}}function onBeforeRender(c){const e=c.target,t=e.axes;t.filter(function(e){return"treegrid"===e.options.type}).forEach(function(e){const t=e.options||{},r=t.labels,o=t.uniqueNames,i=t.max,s=!e.treeGrid.mapOfPosToGridNode||e.series.some(function(e){return!e.hasRendered||e.isDirtyData||e.isDirty});let n=0,a,d;if(s){if(a=e.series.reduce(function(t,r){return r.visible&&((r.options.data||[]).forEach(function(e){r.options.keys&&r.options.keys.length&&(e=r.pointClass.prototype.optionsToObject.call({series:r},e),r.pointClass.setGanttPointAliases(e)),isObject(e,!0)&&(e.seriesIndex=n,t.push(e))}),!0===o&&n++),t},[]),i&&a.length<i)for(let e=a.length;e<=i;e++)a.push({name:e+"â€‹"});d=getTreeGridFromData(a,o||!1,!0===o?n:1),e.categories=d.categories,e.treeGrid.mapOfPosToGridNode=d.mapOfPosToGridNode,e.hasNames=!0,e.treeGrid.tree=d.tree,e.series.forEach(function(e){var t=(e.options.data||[]).map(function(t){return isArray(t)&&e.options.keys&&e.options.keys.length&&a.forEach(function(e){0<=t.indexOf(e.x)&&0<=t.indexOf(e.x2)&&(t=e)}),isObject(t,!0)?merge(t):t});e.visible&&e.setData(t,!1)}),e.treeGrid.mapOptionsToLevel=getLevelOptions({defaults:r,from:1,levels:r&&r.levels,to:e.treeGrid.tree&&e.treeGrid.tree.height}),"beforeRender"===c.type&&(e.treeGrid.collapsedNodes=d.collapsedNodes)}})}function wrapGenerateTick(e,t){const r=this,o=r.treeGrid.mapOptionsToLevel||{},i="treegrid"===r.options.type,s=r.ticks;let n=s[t],a,d,c;i&&r.treeGrid.mapOfPosToGridNode?((a=o[(c=r.treeGrid.mapOfPosToGridNode[t]).depth])&&(d={labels:a}),!n&&TickConstructor?s[t]=n=new TickConstructor(r,t,void 0,void 0,{category:c.name,tickmarkOffset:c.tickmarkOffset,options:d}):(n.parameters.category=c.name,n.options=d,n.addLabel())):e.apply(r,Array.prototype.slice.call(arguments,1))}function wrapInit(e,t,r,o){const i=this,s="treegrid"===r.type;i.treeGrid||(i.treeGrid=new TreeGridAxisAdditions(i)),s&&(addEvent(t,"beforeRender",onBeforeRender),addEvent(t,"beforeRedraw",onBeforeRender),addEvent(t,"addSeries",function(e){e.options.data&&(e=getTreeGridFromData(e.options.data,r.uniqueNames||!1,1),i.treeGrid.collapsedNodes=(i.treeGrid.collapsedNodes||[]).concat(e.collapsedNodes))}),addEvent(i,"foundExtremes",function(){i.treeGrid.collapsedNodes&&i.treeGrid.collapsedNodes.forEach(function(t){var e=i.treeGrid.collapse(t);i.brokenAxis&&(i.brokenAxis.setBreaks(e,!1),i.treeGrid.collapsedNodes&&(i.treeGrid.collapsedNodes=i.treeGrid.collapsedNodes.filter(e=>t.collapseStart!==e.collapseStart||t.collapseEnd!==e.collapseEnd)))})}),addEvent(i,"afterBreaks",function(){"yAxis"===i.coll&&!i.staticScale&&i.chart.options.chart.height&&(i.isDirty=!0)}),r=merge({grid:{enabled:!0},labels:{align:"left",levels:[{level:void 0},{level:1,style:{fontWeight:"bold"}}],symbol:{type:"triangle",x:-5,y:-5,height:10,width:10}},uniqueNames:!1},r,{reversed:!0})),e.apply(i,[t,r,o]),s&&(i.hasNames=!0,i.options.showLastLabel=!0)}function wrapSetTickInterval(e){const t=this,r=t.options,o="number"==typeof r.linkedTo?this.chart[t.coll]?.[r.linkedTo]:void 0,i="treegrid"===r.type;var s;i?(t.min=pick(t.userMin,r.min,t.dataMin),t.max=pick(t.userMax,r.max,t.dataMax),fireEvent(t,"foundExtremes"),t.setAxisTranslation(),t.tickInterval=1,t.tickmarkOffset=.5,t.tickPositions=t.treeGrid.mapOfPosToGridNode?t.treeGrid.getTickPositions():[],o&&(s=o.getExtremes(),t.min=pick(s.min,s.dataMin),t.max=pick(s.max,s.dataMax),t.tickPositions=o.tickPositions),t.linkedParent=o):e.apply(t,Array.prototype.slice.call(arguments,1))}function wrapRedraw(e){const r=this,t=r.options,o="treegrid"===t.type;o&&r.visible&&r.tickPositions.forEach(function(e){const t=r.ticks[e];t.label&&t.label.attachedTreeGridEvents&&(removeEvent(t.label.element),t.label.attachedTreeGridEvents=!1)}),e.apply(r,Array.prototype.slice.call(arguments,1))}class TreeGridAxisAdditions{static compose(e,t,r,o){if(!e.keepProps.includes("treeGrid")){const i=e.prototype;e.keepProps.push("treeGrid"),wrap(i,"generateTick",wrapGenerateTick),wrap(i,"init",wrapInit),wrap(i,"setTickInterval",wrapSetTickInterval),wrap(i,"redraw",wrapRedraw),i.utils={getNode:Tree.getNode},TickConstructor=TickConstructor||o}return GridAxis.compose(e,t,o),BrokenAxis.compose(e,r),TreeGridTick.compose(o),e}constructor(e){this.axis=e}setCollapsedStatus(i){const e=this.axis,s=e.chart;e.series.forEach(function(e){var t=e.options.data;if(i.id&&t){const r=s.get(i.id),o=t[e.data.indexOf(r)];r&&o&&(r.collapsed=i.collapsed,o.collapsed=i.collapsed)}})}collapse(e){const t=this.axis,r=t.options.breaks||[],o=getBreakFromNode(e,t.max);return r.push(o),e.collapsed=!0,t.treeGrid.setCollapsedStatus(e),r}expand(e){const t=this.axis,r=t.options.breaks||[],o=getBreakFromNode(e,t.max);return e.collapsed=!1,t.treeGrid.setCollapsedStatus(e),r.reduce(function(e,t){return t.to===o.to&&t.from===o.from||e.push(t),e},[])}getTickPositions(){const r=this.axis,o=Math.floor(r.min/r.tickInterval)*r.tickInterval,i=Math.ceil(r.max/r.tickInterval)*r.tickInterval;return Object.keys(r.treeGrid.mapOfPosToGridNode||{}).reduce(function(e,t){t=+t;return!(t>=o&&t<=i)||r.brokenAxis&&r.brokenAxis.isInAnyBreak(t)||e.push(t),e},[])}isCollapsed(e){const t=this.axis,r=t.options.breaks||[],o=getBreakFromNode(e,t.max);return r.some(function(e){return e.from===o.from&&e.to===o.to})}toggleCollapse(e){return this.isCollapsed(e)?this.expand(e):this.collapse(e)}}export default TreeGridAxisAdditions;