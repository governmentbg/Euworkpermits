// <auto-generated />
using System;
using BlueCardPortal.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlueCardPortal.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240423121019_Application1")]
    partial class Application1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlueCardPortal.Infrastructure.Data.Models.Application.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("Идентификатор");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_wrt")
                        .HasComment("Дата на последна промяна");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error")
                        .HasComment("Грешка върната от core системата");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("Статус");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .HasComment("Идентификатор на потребител");

                    b.HasKey("Id")
                        .HasName("pk_applications");

                    b.ToTable("applications", null, t =>
                        {
                            t.HasComment("Заявления");
                        });
                });

            modelBuilder.Entity("BlueCardPortal.Infrastructure.Data.Models.Application.ApplicationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("Идентификатор");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uuid")
                        .HasColumnName("application_id")
                        .HasComment("Идентификатор на заявление");

                    b.Property<string>("DataContent")
                        .HasColumnType("jsonb")
                        .HasColumnName("data_content")
                        .HasComment("Данни за раздел сериализирани в json");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_wrt")
                        .HasComment("Дата на последна промяна");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("item_type_id")
                        .HasComment("Тип");

                    b.HasKey("Id")
                        .HasName("pk_application_items");

                    b.HasIndex("ApplicationId")
                        .HasDatabaseName("ix_application_items_application_id");

                    b.HasIndex("ItemTypeId")
                        .HasDatabaseName("ix_application_items_item_type_id");

                    b.ToTable("application_items", null, t =>
                        {
                            t.HasComment("Данни раздел от заявление");
                        });
                });

            modelBuilder.Entity("BlueCardPortal.Infrastructure.Data.Models.Application.ApplicationItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasComment("Наименование");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_en")
                        .HasComment("Наименование en");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type")
                        .HasComment("Тип на модела");

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("view_name")
                        .HasComment("Име на view");

                    b.HasKey("Id")
                        .HasName("pk_application_item_types");

                    b.ToTable("application_item_types", null, t =>
                        {
                            t.HasComment("Тип раздел от заявление");
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text")
                        .HasColumnName("friendly_name");

                    b.Property<string>("Xml")
                        .HasColumnType("text")
                        .HasColumnName("xml");

                    b.HasKey("Id")
                        .HasName("pk_data_protection_keys");

                    b.ToTable("data_protection_keys", (string)null);
                });

            modelBuilder.Entity("BlueCardPortal.Infrastructure.Data.Models.Application.ApplicationItem", b =>
                {
                    b.HasOne("BlueCardPortal.Infrastructure.Data.Models.Application.Application", "Application")
                        .WithMany("ApplicationItems")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_application_items_applications_application_id");

                    b.HasOne("BlueCardPortal.Infrastructure.Data.Models.Application.ApplicationItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_application_items_application_item_types_item_type_id");

                    b.Navigation("Application");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("BlueCardPortal.Infrastructure.Data.Models.Application.Application", b =>
                {
                    b.Navigation("ApplicationItems");
                });
#pragma warning restore 612, 618
        }
    }
}
